'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ASYNC = undefined;

var _redux = require('./redux');

var ASYNC = exports.ASYNC = Symbol('async middleware');

exports.default = function (store) {
  return function (next) {
    return function (action) {
      if (typeof action[ASYNC] === 'undefined') {
        return next(action);
      }

      var _action$ASYNC = action[ASYNC],
          key = _action$ASYNC.key,
          promise = _action$ASYNC.promise,
          once = _action$ASYNC.once;


      var state = store.getState();

      if (once && state.async && state.async.loadState && state.async.loadState[key] && state.async.loadState[key].loaded) {
        return Promise.resolve('No need to load ' + key);
      }

      if (typeof key !== 'string') {
        throw new Error('Specify a string key');
      }

      if (!promise) {
        throw new Error('Specify one of the promise');
      }

      var p = promise(store);

      if (!p || typeof p.then !== 'function') {
        throw new Error('promise() must return Promise');
      }

      next((0, _redux.load)(key));

      return p.then(function (data) {
        return next((0, _redux.loadSuccess)(key, data));
      }).catch(function (error) {
        return next((0, _redux.loadFail)(key, error.toString()));
      });
    };
  };
};