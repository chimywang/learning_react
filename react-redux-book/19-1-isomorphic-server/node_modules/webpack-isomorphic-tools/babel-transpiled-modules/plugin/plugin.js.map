{"version":3,"sources":["../../source/plugin/plugin.js"],"names":["Webpack_isomorphic_tools_plugin","options","log","debug","regular_expressions","assets","asset_type","description","regular_expression","extensions","prototype","Error","regexp","Array","isArray","matcher","length","join","RegExp","development","flag","port","express","require","app","get","request","response","status","send","listen","info","apply","compiler","webpack_configuration","context","project_path","webpack_assets_path","resolve","webpack_assets_file_path","webpack_stats_path","webpack_stats_file_path","plugin","stats","json","toJson","verbosity","no_webpack_stats","webpack_stats_for_each_build","assets_base_url","devServer","publicPath","serve_assets_from_memory","alias","output","output_to_a_file","url_loader_parser","module","source","css_loader_parser","css_modules_loader_parser","style_loader_filter","css_loader","name","split","test","indexOf","style_loader_path_extractor","slice","lastIndexOf","regularExpression","urlLoaderParser","cssLoaderParser","cssModulesLoaderParser","styleLoaderFilter","styleLoaderPathExtractor"],"mappings":"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","file":"plugin.js","sourcesContent":["import path from 'path'\r\n\r\nimport write_assets  from './write assets'\r\nimport notify_stats  from './notify stats'\r\n\r\nimport Log from './../tools/log'\r\n\r\nimport { exists, clone, convert_from_camel_case, alias_properties_with_camel_case } from './../helpers'\r\n\r\nimport { default_webpack_assets, normalize_options, verbosity_levels } from './../common'\r\n\r\n// a Webpack plugin\r\nexport default function Webpack_isomorphic_tools_plugin(options)\r\n{\r\n\t// take the passed in options\r\n\tthis.options = convert_from_camel_case(clone(options))\r\n\r\n\t// add missing fields, etc\r\n\tnormalize_options(this.options)\r\n\r\n\t// logging\r\n\tthis.log = new Log('webpack-isomorphic-tools/plugin', { debug: this.options.debug })\r\n\r\n\t// assets regular expressions (based on extensions).\r\n\t// will be used in loaders and in write_assets\r\n\tthis.regular_expressions = {}\r\n\r\n\t// for each user defined asset type\r\n\tfor (let asset_type of Object.keys(this.options.assets))\r\n\t{\r\n\t\tconst description = this.options.assets[asset_type]\r\n\r\n\t\t// create a regular expression for this file extension (or these file extensions)\r\n\t\tthis.regular_expressions[asset_type] = description.regular_expression || Webpack_isomorphic_tools_plugin.regular_expression(description.extensions)\r\n\t}\r\n}\r\n\r\n// creates a regular expression for this file extension (or these file extensions)\r\nWebpack_isomorphic_tools_plugin.prototype.regular_expression = function(asset_type)\r\n{\r\n\tif (!exists(this.regular_expressions[asset_type]))\r\n\t{\r\n\t\tthrow new Error(`There's no asset type \"${asset_type}\" defined in webpack-isomorphic-tools configuration. Perhaps you didn't spell it correctly.`)\r\n\t}\r\n\r\n\treturn this.regular_expressions[asset_type]\r\n}\r\n\r\n// shorthand alias\r\nWebpack_isomorphic_tools_plugin.prototype.regexp = Webpack_isomorphic_tools_plugin.prototype.regular_expression\r\n\r\n// creates a regular expression for this file extension (or these file extensions)\r\nWebpack_isomorphic_tools_plugin.regular_expression = function(extensions)\r\n{\r\n\tif (!Array.isArray(extensions))\r\n\t{\r\n\t\tthrow new Error(`You were expected to pass a list of extensions (an array). Instead got: ${extensions}. Maybe you were looking for the instance method istead of the class method of this plugin?`)\r\n\t}\r\n\r\n\tlet matcher\r\n\tif (extensions.length > 1)\r\n\t{\r\n\t\tmatcher = `(${extensions.join('|')})`\r\n\t}\r\n\telse\r\n\t{\r\n\t\tmatcher = extensions\r\n\t}\r\n\r\n\treturn new RegExp(`\\\\.${matcher}$`)\r\n}\r\n\r\n// sets development mode flag to whatever was passed (or true if nothing was passed)\r\n// (development mode allows asset hot reloading when used with webpack-dev-server)\r\nWebpack_isomorphic_tools_plugin.prototype.development = function(flag)\r\n{\r\n\t// set development mode flag\r\n\tthis.options.development = exists(flag) ? flag : true\r\n\r\n\t/* istanbul ignore else */\r\n\tif (this.options.development)\r\n\t{\r\n\t\tthis.log.debug('entering development mode')\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthis.log.debug('entering production mode')\r\n\t}\r\n\r\n\t// start HTTP service in development mode\r\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/92\r\n\tif (this.options.development && this.options.port)\r\n\t{\r\n\t\tconst express = require('express')\r\n\t\tconst app = express()\r\n\r\n\t\tapp.get('/', (request, response) =>\r\n\t\t{\r\n\t\t\tif (!this.assets)\r\n\t\t\t{\r\n\t\t\t\treturn response.status(404).send('Webpack assets not generated yet')\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tresponse.send(this.assets)\r\n\t\t})\r\n\r\n\t\tapp.listen(this.options.port, () =>\r\n\t\t{\r\n\t\t\tthis.log.info(`HTTP service listening on port ${this.options.port}`)\r\n\t\t})\r\n\t}\r\n\r\n\t// allows method chaining\r\n\treturn this\r\n}\r\n\r\n// applies the plugin to the Webpack build\r\nWebpack_isomorphic_tools_plugin.prototype.apply = function(compiler)\r\n{\r\n\t// Webpack configuration\r\n\tconst webpack_configuration = compiler.options\r\n\r\n\t// validate webpack configuration\r\n\tif (!webpack_configuration.context)\r\n\t{\r\n\t\tthrow new Error('You must specify \".context\" in your webpack configuration')\r\n\t}\r\n\r\n\t// project base path, required to output webpack-assets.json\r\n\tthis.options.project_path = webpack_configuration.context\r\n\r\n\t// resolve webpack-assets.json file path\r\n\tconst webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\r\n\r\n\t// resolve webpack-stats.json file path\r\n\tconst webpack_stats_path = path.resolve(this.options.project_path, this.options.webpack_stats_file_path)\r\n\r\n\t// selfie\r\n\tconst plugin = this\r\n\r\n\t// when all is done\r\n\t// https://github.com/webpack/docs/wiki/plugins\r\n\tcompiler.plugin('done', function(stats)\r\n\t{\r\n\t\tplugin.log.debug('------------------- Started -------------------')\r\n\r\n\t\tconst json = stats.toJson\r\n\t\t({\r\n\t\t\tcontext: webpack_configuration.context\r\n\t\t})\r\n\r\n\t\t// output some info to the console if in development mode\r\n\t\tif (plugin.options.development && plugin.options.verbosity !== verbosity_levels.no_webpack_stats)\r\n\t\t{\r\n\t\t\t// outputs stats info to the console\r\n\t\t\t// (only needed in development mode)\r\n\t\t\tnotify_stats(stats, json, plugin.options.verbosity === verbosity_levels.webpack_stats_for_each_build)\r\n\t\t}\r\n\r\n\t\t// assets base path (on disk or on the network)\r\n\t\t//\r\n\t\t// (first search for the `devServer.publicPath` setting,\r\n\t\t//  then fallback to the generic `publicPath`)\r\n\t\t//\r\n\t\t// (using `publicPath` from webpack stats here\r\n\t\t//  as opposed to `webpack_configuration.output.publicPath`\r\n\t\t//  because it is processed by webpack replacing things like `[hash]`)\r\n\t\t//\r\n\t\tconst assets_base_url = (webpack_configuration.devServer && webpack_configuration.devServer.publicPath) ? webpack_configuration.devServer.publicPath : json.publicPath\r\n\r\n\t\t// serve webpack assets from RAM rather than from disk\r\n\t\tconst serve_assets_from_memory = plugin.options.development && plugin.options.port\r\n\r\n\t\t// write webpack-assets.json with assets info\r\n\t\t// and cache them in plugin instance\r\n\t\t// for later serving from HTTP service\r\n\t\tplugin.assets = write_assets(json,\r\n\t\t{\r\n\t\t\tdevelopment         : plugin.options.development,\r\n\t\t\tdebug               : plugin.options.debug,\r\n\t\t\tassets              : plugin.options.assets,\r\n\t\t\talias               : plugin.options.alias,\r\n\t\t\tproject_path        : plugin.options.project_path,\r\n\t\t\tassets_base_url,\r\n\t\t\twebpack_assets_path : webpack_assets_path,\r\n\t\t\twebpack_stats_path  : webpack_stats_path,\r\n\t\t\toutput              : default_webpack_assets(),\r\n\t\t\toutput_to_a_file    : !serve_assets_from_memory,\r\n\t\t\tregular_expressions : plugin.regular_expressions\r\n\t\t},\r\n\t\tplugin.log)\r\n\r\n\t\tplugin.log.debug('------------------- Finished -------------------')\r\n\t})\r\n}\r\n\r\n// a sample module source parser for webpack url-loader\r\n// (works for images, fonts, and i guess for everything else, should work for any file type)\r\nWebpack_isomorphic_tools_plugin.url_loader_parser = function(module, options, log)\r\n{\r\n\treturn module.source\r\n}\r\n\r\n// a sample module source parser for webpack css-loader\r\n// (without css-loader \"modules\" feature support)\r\nWebpack_isomorphic_tools_plugin.css_loader_parser = function(module, options, log)\r\n{\r\n\treturn module.source + '\\n module.exports = module.exports.toString();'\r\n}\r\n\r\n// a sample module source parser for webpack css-loader\r\n// (with css-loader \"modules\" feature support)\r\nWebpack_isomorphic_tools_plugin.css_modules_loader_parser = function(module, options, log)\r\n{\r\n\treturn module.source + '\\n module.exports = exports.locals || {}; module.exports._style = exports.toString();'\r\n}\r\n\r\n// a filter for getting a css module when using it with style-loader\r\n//\r\n// in development mode there's webpack \"style-loader\",\r\n// so the module with module.name equal to the asset path is not what's needed\r\n// (because what that module does is it creates a <style/> tag on the page).\r\n// the module with the CSS styles is the one with a long name:\r\nWebpack_isomorphic_tools_plugin.style_loader_filter = function(module, regular_expression, options, log)\r\n{\r\n\tconst css_loader = module.name.split('!')[0]\r\n\treturn regular_expression.test(module.name) &&\r\n\t\t// The paths below have the form of \"/~/css-loader\"\r\n\t\t// and not the form of \"./~/css-loader\"\r\n\t\t// because in some (non-standard) cases\r\n\t\t// Webpack project context can be set \r\n\t\t// not to project root folder.\r\n\t\t//\r\n\t\t// For a discussion see:\r\n\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/pull/68\r\n\t\t// (there the `context` is set to the \"${project_root}/src\" folder\r\n\t\t//  so that the asset paths in `webpack-assets.json` wouldn't\r\n\t\t//  contain the \"./src\" prefix and therefore they will be found\r\n\t\t//  when require()d from code in \"./target\"\r\n\t\t//  which is compiled with Babel from the \"./src\" folder)\r\n\t\t//\r\n\t\t// I personally don't compile sources on the server side,\r\n\t\t// so I haven't thought of better ways of doing all that.\r\n\t\t//\r\n\t\t(css_loader.indexOf('/~/css-loader') > 0 ||\r\n\t\t css_loader.indexOf('/~/.npminstall/css-loader') > 0 ||\r\n\t\t css_loader.indexOf('/~/.store/css-loader') > 0)\r\n}\r\n\r\n// extracts css style file path\r\nWebpack_isomorphic_tools_plugin.style_loader_path_extractor = function(module, options, log)\r\n{\r\n\treturn module.name.slice(module.name.lastIndexOf('!') + 1)\r\n}\r\n\r\n// Doesn't work with Babel 6 compiler\r\n// // alias camel case for those who prefer it\r\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin.prototype)\r\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin)\r\n\r\n// camelCase aliases\r\n\r\nWebpack_isomorphic_tools_plugin.prototype.regularExpression = Webpack_isomorphic_tools_plugin.prototype.regular_expression\r\n\r\nWebpack_isomorphic_tools_plugin.urlLoaderParser          = Webpack_isomorphic_tools_plugin.url_loader_parser\r\nWebpack_isomorphic_tools_plugin.cssLoaderParser          = Webpack_isomorphic_tools_plugin.css_loader_parser\r\nWebpack_isomorphic_tools_plugin.cssModulesLoaderParser   = Webpack_isomorphic_tools_plugin.css_modules_loader_parser\r\nWebpack_isomorphic_tools_plugin.styleLoaderFilter        = Webpack_isomorphic_tools_plugin.style_loader_filter\r\nWebpack_isomorphic_tools_plugin.styleLoaderPathExtractor = Webpack_isomorphic_tools_plugin.style_loader_path_extractor"]}