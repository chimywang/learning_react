{"version":3,"sources":["../source/helpers.js"],"names":[],"mappings":"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","file":"helpers.js","sourcesContent":["// // if the variable is defined\nexport const exists = what => typeof what !== 'undefined'\n\n// used for JSON object type checking\nconst object_constructor = {}.constructor\n\n// detects a JSON object\nexport function is_object(object)\n{\n\treturn exists(object) && (object !== null) && object.constructor === object_constructor\n}\n\n// extends the first object with \n/* istanbul ignore next: some weird transpiled code, not testable */\nexport function extend(...objects)\n{\n\tconst to   = objects[0]\n\tconst from = objects[1]\n\n\tif (objects.length > 2)\n\t{\n\t\tconst last = objects.pop()\n\t\tconst intermediary_result = extend.apply(this, objects)\n\t\treturn extend(intermediary_result, last)\n\t}\n\n\tfor (let key of Object.keys(from))\n\t{\n\t\tif (is_object(from[key]))\n\t\t{\n\t\t\tif (!is_object(to[key]))\n\t\t\t{\n\t\t\t\tto[key] = {}\n\t\t\t}\n\n\t\t\textend(to[key], from[key])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tto[key] = from[key]\n\t\t}\n\t}\n\n\treturn to\n}\n\nexport function merge()\n{\n\tconst parameters = Array.prototype.slice.call(arguments, 0)\n\tparameters.unshift({})\n\treturn extend.apply(this, parameters)\n}\n\nexport function clone(object)\n{\n\treturn merge({}, object)\n}\n\n// creates camelCased aliases for all the keys of an object\nexport function convert_from_camel_case(object)\n{\n\tfor (let key of Object.keys(object))\n\t{\n\t\tif (/[A-Z]/.test(key))\n\t\t// if (key.indexOf('_') >= 0)\n\t\t{\n\t\t\t// const camel_cased_key = key.replace(/_(.)/g, function(match, group_1)\n\t\t\t// {\n\t\t\t// \treturn group_1.toUpperCase()\n\t\t\t// })\n\n\t\t\t// if (!exists(object[camel_cased_key]))\n\t\t\t// {\n\t\t\t// \tobject[camel_cased_key] = object[key]\n\t\t\t// \tdelete object[key]\n\t\t\t// }\n\n\t\t\tconst lo_dashed_key = key.replace(/([A-Z])/g, function(match, group_1)\n\t\t\t{\n\t\t\t\treturn '_' + group_1.toLowerCase()\n\t\t\t})\n\n\t\t\tif (!exists(object[lo_dashed_key]))\n\t\t\t{\n\t\t\t\tobject[lo_dashed_key] = object[key]\n\t\t\t\tdelete object[key]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn object\n}\n\nfunction escape_regexp(string)\n{\n\tconst specials = new RegExp(\"[.*+?|()\\\\[\\\\]{}\\\\\\\\]\", 'g')\n\treturn string.replace(specials, \"\\\\$&\")\n}\n\nexport function replace_all(where, what, with_what)\n{\n\tconst regexp = new RegExp(escape_regexp(what), 'g')\n\treturn where.replace(regexp, with_what)\n}\n\nexport function starts_with(string, substring)\n{\n\treturn string.indexOf(substring) === 0\n}\n\nexport function ends_with(string, substring)\n{\n\tlet i = string.length\n\tlet j = substring.length\n\n\tif (j > i)\n\t{\n\t\treturn false\n\t}\n\n\twhile (j > 0)\n\t{\n\t\ti--\n\t\tj--\n\n\t\tif (string[i] !== substring[j])\n\t\t{\n\t\t\treturn false\n\t\t}\n\t}\n\n\treturn true\n\n\t// const index = string.lastIndexOf(substring)\n\t// return index >= 0 && index === string.length - substring.length\n}\n\nexport function is_empty(array)\n{\n\treturn array.length === 0\n}\n\nexport function not_empty(array)\n{\n\treturn array.length > 0\n}\n\n// repeat string N times\nexport function repeat(what, times)\n{\n\tlet result = ''\n\twhile (times > 0)\n\t{\n\t\tresult += what\n\t\ttimes--\n\t}\n\treturn result\n}\n\n// if the text is blank\nexport function is_blank(text)\n{\n\treturn !exists(text) || !text.replace(/\\s/g, '')\n}\n\n// zips two arrays\nexport function zip(a, b)\n{\n\treturn a.map(function(_, index) \n\t{\n\t\treturn [a[index], b[index]]\n\t})\n}"]}