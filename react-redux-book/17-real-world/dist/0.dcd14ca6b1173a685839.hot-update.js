webpackHotUpdate(0,{

/***/ 120:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RESET_ERROR_MESSAGE = exports.STARGAZERS_FAILURE = exports.STARGAZERS_SUCCESS = exports.STARGAZERS_REQUEST = exports.STARRED_FAILURE = exports.STARRED_SUCCESS = exports.STARRED_REQUEST = exports.REPO_FAILURE = exports.REPO_SUCCESS = exports.REPO_REQUEST = exports.USER_FAILURE = exports.USER_SUCCESS = exports.USER_REQUEST = undefined;\nexports.loadUser = loadUser;\nexports.loadRepo = loadRepo;\nexports.loadStarred = loadStarred;\nexports.loadStargazers = loadStargazers;\nexports.resetErrorMessage = resetErrorMessage;\n\nvar _api = __webpack_require__(163);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar USER_REQUEST = exports.USER_REQUEST = 'USER_REQUEST';\nvar USER_SUCCESS = exports.USER_SUCCESS = 'USER_SUCCESS';\nvar USER_FAILURE = exports.USER_FAILURE = 'USER_FAILURE';\n\n// Fetches a single user from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\nfunction fetchUser(login) {\n\n  console.log('------------------fetchUser------------------');\n  console.log(login);\n  return _defineProperty({}, _api.CALL_API, {\n    types: [USER_REQUEST, USER_SUCCESS, USER_FAILURE],\n    endpoint: 'users/' + login,\n    schema: _api.Schemas.USER\n  });\n}\n\n// Fetches a single user from Github API unless it is cached.\n// Relies on Redux Thunk middleware.\nfunction loadUser(login) {\n  var requiredFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n\n  console.log('------------------loadUser------------------');\n  console.log('login : ' + login);\n  console.log('requiredFields : ' + requiredFields);\n  return function (dispatch, getState) {\n    var user = getState().entities.users[login];\n    if (user && requiredFields.every(function (key) {\n      return user.hasOwnProperty(key);\n    })) {\n      return null;\n    }\n\n    return dispatch(fetchUser(login));\n  };\n}\n\nvar REPO_REQUEST = exports.REPO_REQUEST = 'REPO_REQUEST';\nvar REPO_SUCCESS = exports.REPO_SUCCESS = 'REPO_SUCCESS';\nvar REPO_FAILURE = exports.REPO_FAILURE = 'REPO_FAILURE';\n\n// Fetches a single repository from Github API.\n// Relies on the custom API middleware defined in ../middleware/api.js.\nfunction fetchRepo(fullName) {\n  console.log('------------------fetchRepo------------------');\n  console.log('fullName : ' + fullName);\n\n  return _defineProperty({}, _api.CALL_API, {\n    types: [REPO_REQUEST, REPO_SUCCESS, REPO_FAILURE],\n    endpoint: 'repos/' + fullName,\n    schema: _api.Schemas.REPO\n  });\n}\n\n// Fetches a single repository from Github API unless it is cached.\n// Relies on Redux Thunk middleware.\nfunction loadRepo(fullName) {\n  var requiredFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  console.log('------------------loadRepo------------------');\n  console.log('fullName : ' + fullName);\n  console.log('requiredFields : ' + requiredFields);\n\n  return function (dispatch, getState) {\n    var repo = getState().entities.repos[fullName];\n    if (repo && requiredFields.every(function (key) {\n      return repo.hasOwnProperty(key);\n    })) {\n      return null;\n    }\n\n    return dispatch(fetchRepo(fullName));\n  };\n}\n\nvar STARRED_REQUEST = exports.STARRED_REQUEST = 'STARRED_REQUEST';\nvar STARRED_SUCCESS = exports.STARRED_SUCCESS = 'STARRED_SUCCESS';\nvar STARRED_FAILURE = exports.STARRED_FAILURE = 'STARRED_FAILURE';\n\n// Fetches a page of starred repos by a particular user.\n// Relies on the custom API middleware defined in ../middleware/api.js.\nfunction fetchStarred(login, nextPageUrl) {\n  console.log('------------------fetchStarred--------------------');\n  console.log('login : ' + login);\n  console.log('nextPageUrl : ' + nextPageUrl);\n\n  return _defineProperty({\n    login: login\n  }, _api.CALL_API, {\n    types: [STARRED_REQUEST, STARRED_SUCCESS, STARRED_FAILURE],\n    endpoint: nextPageUrl,\n    schema: _api.Schemas.REPO_ARRAY\n  });\n}\n\n// Fetches a page of starred repos by a particular user.\n// Bails out if page is cached and user didn’t specifically request next page.\n// Relies on Redux Thunk middleware.\nfunction loadStarred(login, nextPage) {\n\n  console.log('------------------loadStarred------------------');\n  console.log('login : ' + login);\n  console.log('nextPage : ' + nextPage);\n\n  return function (dispatch, getState) {\n    var _ref4 = getState().pagination.starredByUser[login] || {},\n        _ref4$nextPageUrl = _ref4.nextPageUrl,\n        nextPageUrl = _ref4$nextPageUrl === undefined ? 'users/' + login + '/starred' : _ref4$nextPageUrl,\n        _ref4$pageCount = _ref4.pageCount,\n        pageCount = _ref4$pageCount === undefined ? 0 : _ref4$pageCount;\n\n    if (pageCount > 0 && !nextPage) {\n      return null;\n    }\n\n    return dispatch(fetchStarred(login, nextPageUrl));\n  };\n}\n\nvar STARGAZERS_REQUEST = exports.STARGAZERS_REQUEST = 'STARGAZERS_REQUEST';\nvar STARGAZERS_SUCCESS = exports.STARGAZERS_SUCCESS = 'STARGAZERS_SUCCESS';\nvar STARGAZERS_FAILURE = exports.STARGAZERS_FAILURE = 'STARGAZERS_FAILURE';\n\n// Fetches a page of stargazers for a particular repo.\n// Relies on the custom API middleware defined in ../middleware/api.js.\nfunction fetchStargazers(fullName, nextPageUrl) {\n  console.log('------------------fetchStargazers------------------');\n  console.log('fullName : ' + fullName);\n  console.log('nextPageUrl : ' + nextPageUrl);\n\n  return _defineProperty({\n    fullName: fullName\n  }, _api.CALL_API, {\n    types: [STARGAZERS_REQUEST, STARGAZERS_SUCCESS, STARGAZERS_FAILURE],\n    endpoint: nextPageUrl,\n    schema: _api.Schemas.USER_ARRAY\n  });\n}\n\n// Fetches a page of stargazers for a particular repo.\n// Bails out if page is cached and user didn’t specifically request next page.\n// Relies on Redux Thunk middleware.\nfunction loadStargazers(fullName, nextPage) {\n\n  console.log('------------------loadStargazers------------------');\n  console.log('fullName : ' + fullName);\n  console.log('nextPage : ' + nextPage);\n\n  return function (dispatch, getState) {\n    var _ref6 = getState().pagination.stargazersByRepo[fullName] || {},\n        _ref6$nextPageUrl = _ref6.nextPageUrl,\n        nextPageUrl = _ref6$nextPageUrl === undefined ? 'repos/' + fullName + '/stargazers' : _ref6$nextPageUrl,\n        _ref6$pageCount = _ref6.pageCount,\n        pageCount = _ref6$pageCount === undefined ? 0 : _ref6$pageCount;\n\n    if (pageCount > 0 && !nextPage) {\n      return null;\n    }\n\n    return dispatch(fetchStargazers(fullName, nextPageUrl));\n  };\n}\n\nvar RESET_ERROR_MESSAGE = exports.RESET_ERROR_MESSAGE = 'RESET_ERROR_MESSAGE';\n\n// Resets the currently visible error message.\nfunction resetErrorMessage() {\n  return {\n    type: RESET_ERROR_MESSAGE\n  };\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },

/***/ 163:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CALL_API = exports.Schemas = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _normalizr = __webpack_require__(838);\n\nvar _humps = __webpack_require__(727);\n\n__webpack_require__(728);\n\n// Extracts the next page URL from Github API response.\nfunction getNextPageUrl(response) {\n\n  console.log('------------------getNextPageUrl------------------');\n  console.log('response : ' + response);\n\n  var link = response.headers.get('link');\n  if (!link) {\n    return null;\n  }\n\n  var nextLink = link.split(',').find(function (s) {\n    return s.indexOf('rel=\"next\"') > -1;\n  });\n  if (!nextLink) {\n    return null;\n  }\n\n  return nextLink.split(';')[0].slice(1, -1);\n}\n\nvar API_ROOT = 'https://api.github.com/';\n\n// Fetches an API response and normalizes the result JSON according to schema.\n// This makes every API response have the same shape, regardless of how nested it was.\nfunction callApi(endpoint, schema) {\n  console.log('------------------callApi------------------');\n  console.log('endpoint : ' + endpoint);\n  console.log('schema : ' + schema);\n  var fullUrl = endpoint.indexOf(API_ROOT) === -1 ? API_ROOT + endpoint : endpoint;\n\n  return fetch(fullUrl).then(function (response) {\n    return response.json().then(function (json) {\n      return { json: json, response: response };\n    });\n  }).then(function (_ref) {\n    var json = _ref.json,\n        response = _ref.response;\n\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    var camelizedJson = (0, _humps.camelizeKeys)(json);\n    var nextPageUrl = getNextPageUrl(response);\n\n    return Object.assign({}, (0, _normalizr.normalize)(camelizedJson, schema), { nextPageUrl: nextPageUrl });\n  });\n}\n\n// We use this Normalizr schemas to transform API responses from a nested form\n// to a flat form where repos and users are placed in `entities`, and nested\n// JSON objects are replaced with their IDs. This is very convenient for\n// consumption by reducers, because we can easily build a normalized tree\n// and keep it updated as we fetch more data.\n\n// Read more about Normalizr: https://github.com/gaearon/normalizr\n\nvar userSchema = new _normalizr.Schema('users', {\n  idAttribute: 'login'\n});\n\nvar repoSchema = new _normalizr.Schema('repos', {\n  idAttribute: 'fullName'\n});\n\nrepoSchema.define({\n  owner: userSchema\n});\n\n// Schemas for Github API responses.\nvar Schemas = exports.Schemas = {\n  USER: userSchema,\n  USER_ARRAY: (0, _normalizr.arrayOf)(userSchema),\n  REPO: repoSchema,\n  REPO_ARRAY: (0, _normalizr.arrayOf)(repoSchema)\n};\n\n// Action key that carries API call info interpreted by this Redux middleware.\nvar CALL_API = exports.CALL_API = Symbol('Call API');\n\n// A Redux middleware that interprets actions with CALL_API info specified.\n// Performs the call and promises when such actions are dispatched.\n\nexports.default = function (store) {\n  return function (next) {\n    return function (action) {\n\n      var callAPI = action[CALL_API];\n      if (typeof callAPI === 'undefined') {\n        return next(action);\n      }\n\n      var endpoint = callAPI.endpoint;\n      var schema = callAPI.schema,\n          types = callAPI.types;\n\n\n      if (typeof endpoint === 'function') {\n        endpoint = endpoint(store.getState());\n      }\n\n      if (typeof endpoint !== 'string') {\n        throw new Error('Specify a string endpoint URL.');\n      }\n      if (!schema) {\n        throw new Error('Specify one of the exported Schemas.');\n      }\n      if (!Array.isArray(types) || types.length !== 3) {\n        throw new Error('Expected an array of three action types.');\n      }\n      if (!types.every(function (type) {\n        return typeof type === 'string';\n      })) {\n        throw new Error('Expected action types to be strings.');\n      }\n\n      function actionWith(data) {\n        var finalAction = Object.assign({}, action, data);\n        delete finalAction[CALL_API];\n        return finalAction;\n      }\n\n      var _types = _slicedToArray(types, 3),\n          requestType = _types[0],\n          successType = _types[1],\n          failureType = _types[2];\n\n      next(actionWith({ type: requestType }));\n\n      return callApi(endpoint, schema).then(function (response) {\n        return next(actionWith({\n          response: response,\n          type: successType\n        }));\n      }, function (error) {\n        return next(actionWith({\n          type: failureType,\n          error: error.message || 'Something bad happened'\n        }));\n      });\n    };\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL21pZGRsZXdhcmUvYXBpLmpzP2NkMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBhcnJheU9mLCBub3JtYWxpemUgfSBmcm9tICdub3JtYWxpenInO1xuaW1wb3J0IHsgY2FtZWxpemVLZXlzIH0gZnJvbSAnaHVtcHMnO1xuaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcblxuLy8gRXh0cmFjdHMgdGhlIG5leHQgcGFnZSBVUkwgZnJvbSBHaXRodWIgQVBJIHJlc3BvbnNlLlxuZnVuY3Rpb24gZ2V0TmV4dFBhZ2VVcmwocmVzcG9uc2UpIHtcblxuICBjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS0tZ2V0TmV4dFBhZ2VVcmwtLS0tLS0tLS0tLS0tLS0tLS0nKTtcbiAgY29uc29sZS5sb2coJ3Jlc3BvbnNlIDogJytyZXNwb25zZSk7XG5cbiAgY29uc3QgbGluayA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdsaW5rJyk7XG4gIGlmICghbGluaykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgY29uc3QgbmV4dExpbmsgPSBsaW5rLnNwbGl0KCcsJykuZmluZChzID0+IHMuaW5kZXhPZigncmVsPVwibmV4dFwiJykgPiAtMSk7XG4gIGlmICghbmV4dExpbmspIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBuZXh0TGluay5zcGxpdCgnOycpWzBdLnNsaWNlKDEsIC0xKTtcbn1cblxuY29uc3QgQVBJX1JPT1QgPSAnaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS8nO1xuXG4vLyBGZXRjaGVzIGFuIEFQSSByZXNwb25zZSBhbmQgbm9ybWFsaXplcyB0aGUgcmVzdWx0IEpTT04gYWNjb3JkaW5nIHRvIHNjaGVtYS5cbi8vIFRoaXMgbWFrZXMgZXZlcnkgQVBJIHJlc3BvbnNlIGhhdmUgdGhlIHNhbWUgc2hhcGUsIHJlZ2FyZGxlc3Mgb2YgaG93IG5lc3RlZCBpdCB3YXMuXG5mdW5jdGlvbiBjYWxsQXBpKGVuZHBvaW50LCBzY2hlbWEpIHtcbiAgY29uc29sZS5sb2coJy0tLS0tLS0tLS0tLS0tLS0tLWNhbGxBcGktLS0tLS0tLS0tLS0tLS0tLS0nKTtcbiAgY29uc29sZS5sb2coJ2VuZHBvaW50IDogJytlbmRwb2ludCk7XG4gIGNvbnNvbGUubG9nKCdzY2hlbWEgOiAnK3NjaGVtYSk7XG4gIGNvbnN0IGZ1bGxVcmwgPSAoZW5kcG9pbnQuaW5kZXhPZihBUElfUk9PVCkgPT09IC0xKSA/IEFQSV9ST09UICsgZW5kcG9pbnQgOiBlbmRwb2ludDtcblxuICByZXR1cm4gZmV0Y2goZnVsbFVybClcbiAgICAudGhlbihyZXNwb25zZSA9PlxuICAgICAgcmVzcG9uc2UuanNvbigpLnRoZW4oanNvbiA9PiAoeyBqc29uLCByZXNwb25zZSB9KSlcbiAgICApLnRoZW4oKHsganNvbiwgcmVzcG9uc2UgfSkgPT4ge1xuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoanNvbik7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGNhbWVsaXplZEpzb24gPSBjYW1lbGl6ZUtleXMoanNvbik7XG4gICAgICBjb25zdCBuZXh0UGFnZVVybCA9IGdldE5leHRQYWdlVXJsKHJlc3BvbnNlKTtcblxuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sXG4gICAgICAgIG5vcm1hbGl6ZShjYW1lbGl6ZWRKc29uLCBzY2hlbWEpLFxuICAgICAgICB7IG5leHRQYWdlVXJsIH1cbiAgICAgICk7XG4gICAgfSk7XG59XG5cbi8vIFdlIHVzZSB0aGlzIE5vcm1hbGl6ciBzY2hlbWFzIHRvIHRyYW5zZm9ybSBBUEkgcmVzcG9uc2VzIGZyb20gYSBuZXN0ZWQgZm9ybVxuLy8gdG8gYSBmbGF0IGZvcm0gd2hlcmUgcmVwb3MgYW5kIHVzZXJzIGFyZSBwbGFjZWQgaW4gYGVudGl0aWVzYCwgYW5kIG5lc3RlZFxuLy8gSlNPTiBvYmplY3RzIGFyZSByZXBsYWNlZCB3aXRoIHRoZWlyIElEcy4gVGhpcyBpcyB2ZXJ5IGNvbnZlbmllbnQgZm9yXG4vLyBjb25zdW1wdGlvbiBieSByZWR1Y2VycywgYmVjYXVzZSB3ZSBjYW4gZWFzaWx5IGJ1aWxkIGEgbm9ybWFsaXplZCB0cmVlXG4vLyBhbmQga2VlcCBpdCB1cGRhdGVkIGFzIHdlIGZldGNoIG1vcmUgZGF0YS5cblxuLy8gUmVhZCBtb3JlIGFib3V0IE5vcm1hbGl6cjogaHR0cHM6Ly9naXRodWIuY29tL2dhZWFyb24vbm9ybWFsaXpyXG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgU2NoZW1hKCd1c2VycycsIHtcbiAgaWRBdHRyaWJ1dGU6ICdsb2dpbicsXG59KTtcblxuY29uc3QgcmVwb1NjaGVtYSA9IG5ldyBTY2hlbWEoJ3JlcG9zJywge1xuICBpZEF0dHJpYnV0ZTogJ2Z1bGxOYW1lJyxcbn0pO1xuXG5yZXBvU2NoZW1hLmRlZmluZSh7XG4gIG93bmVyOiB1c2VyU2NoZW1hLFxufSk7XG5cbi8vIFNjaGVtYXMgZm9yIEdpdGh1YiBBUEkgcmVzcG9uc2VzLlxuZXhwb3J0IGNvbnN0IFNjaGVtYXMgPSB7XG4gIFVTRVI6IHVzZXJTY2hlbWEsXG4gIFVTRVJfQVJSQVk6IGFycmF5T2YodXNlclNjaGVtYSksXG4gIFJFUE86IHJlcG9TY2hlbWEsXG4gIFJFUE9fQVJSQVk6IGFycmF5T2YocmVwb1NjaGVtYSksXG59O1xuXG4vLyBBY3Rpb24ga2V5IHRoYXQgY2FycmllcyBBUEkgY2FsbCBpbmZvIGludGVycHJldGVkIGJ5IHRoaXMgUmVkdXggbWlkZGxld2FyZS5cbmV4cG9ydCBjb25zdCBDQUxMX0FQSSA9IFN5bWJvbCgnQ2FsbCBBUEknKTtcblxuLy8gQSBSZWR1eCBtaWRkbGV3YXJlIHRoYXQgaW50ZXJwcmV0cyBhY3Rpb25zIHdpdGggQ0FMTF9BUEkgaW5mbyBzcGVjaWZpZWQuXG4vLyBQZXJmb3JtcyB0aGUgY2FsbCBhbmQgcHJvbWlzZXMgd2hlbiBzdWNoIGFjdGlvbnMgYXJlIGRpc3BhdGNoZWQuXG5leHBvcnQgZGVmYXVsdCBzdG9yZSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7XG5cbiAgY29uc3QgY2FsbEFQSSA9IGFjdGlvbltDQUxMX0FQSV07XG4gIGlmICh0eXBlb2YgY2FsbEFQSSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICB9XG5cbiAgbGV0IHsgZW5kcG9pbnQgfSA9IGNhbGxBUEk7XG4gIGNvbnN0IHsgc2NoZW1hLCB0eXBlcyB9ID0gY2FsbEFQSTtcblxuICBpZiAodHlwZW9mIGVuZHBvaW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZW5kcG9pbnQgPSBlbmRwb2ludChzdG9yZS5nZXRTdGF0ZSgpKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZW5kcG9pbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTcGVjaWZ5IGEgc3RyaW5nIGVuZHBvaW50IFVSTC4nKTtcbiAgfVxuICBpZiAoIXNjaGVtYSkge1xuICAgIHRocm93IG5ldyBFcnJvcignU3BlY2lmeSBvbmUgb2YgdGhlIGV4cG9ydGVkIFNjaGVtYXMuJyk7XG4gIH1cbiAgaWYgKCFBcnJheS5pc0FycmF5KHR5cGVzKSB8fCB0eXBlcy5sZW5ndGggIT09IDMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGFuIGFycmF5IG9mIHRocmVlIGFjdGlvbiB0eXBlcy4nKTtcbiAgfVxuICBpZiAoIXR5cGVzLmV2ZXJ5KHR5cGUgPT4gdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnKSkge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgYWN0aW9uIHR5cGVzIHRvIGJlIHN0cmluZ3MuJyk7XG4gIH1cblxuICBmdW5jdGlvbiBhY3Rpb25XaXRoKGRhdGEpIHtcbiAgICBjb25zdCBmaW5hbEFjdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIGFjdGlvbiwgZGF0YSk7XG4gICAgZGVsZXRlIGZpbmFsQWN0aW9uW0NBTExfQVBJXTtcbiAgICByZXR1cm4gZmluYWxBY3Rpb247XG4gIH1cblxuICBjb25zdCBbcmVxdWVzdFR5cGUsIHN1Y2Nlc3NUeXBlLCBmYWlsdXJlVHlwZV0gPSB0eXBlcztcbiAgbmV4dChhY3Rpb25XaXRoKHsgdHlwZTogcmVxdWVzdFR5cGUgfSkpO1xuXG4gIHJldHVybiBjYWxsQXBpKGVuZHBvaW50LCBzY2hlbWEpLnRoZW4oXG4gICAgcmVzcG9uc2UgPT4gbmV4dChhY3Rpb25XaXRoKHtcbiAgICAgIHJlc3BvbnNlLFxuICAgICAgdHlwZTogc3VjY2Vzc1R5cGUsXG4gICAgfSkpLFxuICAgIGVycm9yID0+IG5leHQoYWN0aW9uV2l0aCh7XG4gICAgICB0eXBlOiBmYWlsdXJlVHlwZSxcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdTb21ldGhpbmcgYmFkIGhhcHBlbmVkJyxcbiAgICB9KSlcbiAgKTtcbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbWlkZGxld2FyZS9hcGkuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFEQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFHQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBaUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFGQTtBQUFBO0FBS0E7QUE5Q0E7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }

})