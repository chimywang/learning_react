{"version":3,"sources":["../source/index.js"],"names":["webpack_isomorphic_tools","options","hooks","cached_assets","debug","log","require","version","flag","development","port","error","existsSync","webpack_assets_path","Error","cache","path","alias_hook","resolver","module","project_path","alias","callback","resolve","webpack_assets_file_path","register","enable_aliasing","modules_directories","inject_modules_directories","patch_require","wait_for_assets","reject","assets","asset_type","description","extensions","extension","register_extension","loaders_hook","global_hook","required_path","indexOf","parts","split","local_asset_path","pop","map","loader_parts","loader","join","global_asset_path","normalize_asset_path","asset","asset_source","undefined","require_asset","require_cache_path","push","hook","filter","x","original_find_paths","_findPath","request","paths","a_path","sep","length","forEach","modules_directory","require_context","minify","fromString","code","require_ensure","bind","original_compile","prototype","_compile","content","filename","call","preamble","asset_path","includes","excludes","to_javascript_module_source","possible_webpack_paths","replace","construct_guesses","last","rest","guesses","guess","one","two","possible_webpack_asset_paths","webpack_asset_path","unmount","exclude","RegExp","test","include","done","check_interval","message_interval","message_timer","tools","wait_for","condition","proceed","check","info","setTimeout","ready_check","message"],"mappings":"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","file":"index.js","sourcesContent":["import path   from 'path'\r\nimport fs     from 'fs'\r\n\r\nimport require_hacker from 'require-hacker'\r\nimport UglifyJS       from 'uglify-js'\r\n\r\nimport Log     from './tools/log'\r\nimport request from './tools/synchronous http'\r\n\r\nimport { exists, clone, convert_from_camel_case, starts_with, ends_with, alias_properties_with_camel_case } from './helpers'\r\nimport { default_webpack_assets, normalize_options, alias_hook, normalize_asset_path, uniform_path } from './common'\r\n\r\n// using ES6 template strings\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\r\nexport default class webpack_isomorphic_tools\r\n{\r\n\t// require() hooks for assets\r\n\thooks = []\r\n\r\n\t// used to keep track of cached assets and flush their caches on .refresh() call\r\n\tcached_assets = []\r\n\r\n\tconstructor(options)\r\n\t{\r\n\t\t// take the passed in options\r\n\t\tthis.options = convert_from_camel_case(clone(options))\r\n\r\n\t\t// add missing fields, etc\r\n\t\tnormalize_options(this.options)\r\n\r\n\t\t// set require-hacker debug mode if run in debug mode\r\n\t\tif (this.options.debug)\r\n\t\t{\r\n\t\t\trequire_hacker.log.options.debug = true\r\n\t\t}\r\n\r\n\t\t// logging\r\n\t\tthis.log = new Log('webpack-isomorphic-tools', { debug: this.options.debug })\r\n\r\n\t\tthis.log.debug(`instantiated webpack-isomorphic-tools v${require('../package.json').version} with options`, this.options)\r\n\t}\r\n\r\n\t// sets development mode flag to whatever was passed (or true if nothing was passed)\r\n\t// (development mode allows asset hot reloading when used with webpack-dev-server)\r\n\tdevelopment(flag)\r\n\t{\r\n\t\t// set development mode flag\r\n\t\tthis.options.development = exists(flag) ? flag : true\r\n\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\tthis.log.debug('entering development mode')\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.log.debug('entering production mode')\r\n\t\t}\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// returns a mapping to read file paths for all the user specified asset types\r\n\t// along with a couple of predefined ones: javascripts and styles\r\n\tassets()\r\n\t{\r\n\t\t// when in development mode\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\t// webpack and node.js start in parallel\r\n\t\t\t// so webpack-assets.json might not exist on the very first run\r\n\t\t\t// if a developer chose not to use the .server() method with a callback\r\n\t\t\t// (or if a developer chose not to wait for a Promise returned by the .server() method)\r\n\r\n\t\t\t// either go over a network\r\n\t\t\tif (this.options.port)\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\treturn request(this.options.port)\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.log.error(`Couldn't contact webpack-isomorphic-tools plugin over HTTP. Using an empty stub for webpack assets map.`)\r\n\t\t\t\t\tthis.log.error(error)\r\n\t\t\t\t\treturn default_webpack_assets()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// or read it from disk\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (!fs.existsSync(this.webpack_assets_path))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.log.error(`\"${this.webpack_assets_path}\" not found. Most likely it hasn't yet been generated by Webpack. The most probable cause of this error is that you placed your server code outside of the callback in \"webpack_isomorphic_tools.server(path, callback)\" (or outside of the \".then()\" call if you are using promises API). Using an empty stub instead.`)\r\n\t\t\t\t\treturn default_webpack_assets()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn require(this.webpack_assets_path)\r\n\t}\r\n\r\n\t// clear the require.cache (only used in developer mode with webpack-dev-server)\r\n\trefresh()\r\n\t{\r\n\t\t// ensure this is development mode\r\n\t\tif (!this.options.development)\r\n\t\t{\r\n\t\t\tthrow new Error('.refresh() called in production mode. Did you forget to call .development() method on your webpack-isomorphic-tools server instance?')\r\n\t\t}\r\n\r\n\t\tthis.log.debug('flushing require() caches')\r\n\r\n\t\t// uncache webpack-assets.json file\r\n\t\t// this.log.debug(' flushing require() cache for webpack assets json file')\r\n\t\t// this.log.debug(` (was cached: ${typeof(require.cache[this.webpack_assets_path]) !== 'undefined'})`)\r\n\t\tdelete require.cache[this.webpack_assets_path]\r\n\r\n\t\t// uncache cached assets\r\n\t\tfor (let path of this.cached_assets)\r\n\t\t{\r\n\t\t\tthis.log.debug(` flushing require() cache for ${path}`)\r\n\t\t\tdelete require.cache[path]\r\n\t\t}\r\n\r\n\t\t// no assets are cached now\r\n\t\tthis.cached_assets = []\r\n\t}\r\n\r\n\t// Makes `webpack-isomorphic-tools` aware of Webpack aliasing feature.\r\n\t// https://webpack.github.io/docs/resolving.html#aliasing\r\n\t// The `aliases` parameter corresponds to `resolve.alias`\r\n\t// in your Webpack configuration.\r\n\t// If this method is used it must be called before the `.server()` method.\r\n\tenable_aliasing()\r\n\t{\r\n\t\t// mount require() hook\r\n\t\tthis.alias_hook = require_hacker.resolver((path, module) =>\r\n\t\t{\r\n\t\t\t// returns aliased global filesystem path\r\n\t\t\treturn alias_hook(path, module, this.options.project_path, this.options.alias, this.log)\r\n\t\t})\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// Initializes server-side instance of `webpack-isomorphic-tools`\r\n\t// with the base path for your project, then calls `.register()`,\r\n\t// and after that calls .wait_for_assets(callback).\r\n\t//\r\n\t// The `project_path` parameter must be identical\r\n\t// to the `context` parameter of your Webpack configuration\r\n\t// and is needed to locate `webpack-assets.json`\r\n\t//  which is output by Webpack process.\r\n\t//\r\n\t// sets up \"project_path\" option\r\n\t// (this option is required on the server to locate webpack-assets.json)\r\n\tserver(project_path, callback)\r\n\t{\r\n\t\t// project base path, required to locate webpack-assets.json\r\n\t\tthis.options.project_path = project_path\r\n\r\n\t\t// resolve webpack-assets.json file path\r\n\t\tthis.webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\r\n\r\n\t\t// register require() hooks\r\n\t\tthis.register()\r\n\r\n\t\t// if Webpack aliases are supplied, enable aliasing\r\n\t\tif (this.options.alias)\r\n\t\t{\r\n\t\t\tthis.enable_aliasing()\r\n\t\t}\r\n\r\n\t\t// if Webpack `modulesDirectories` are supplied, enable them\r\n\t\tif (this.options.modules_directories)\r\n\t\t{\r\n\t\t\tthis.inject_modules_directories(this.options.modules_directories)\r\n\t\t}\r\n\r\n\t\t// inject helpers like require.context() and require.ensure()\r\n\t\tif (this.options.patch_require)\r\n\t\t{\r\n\t\t\tthis.log.debug('Patching Node.js require() function')\r\n\t\t\tthis.patch_require()\r\n\t\t}\r\n\r\n\t\t// when ready:\r\n\r\n\t\t// if callback is given, call it back\r\n\t\tif (callback)\r\n\t\t{\r\n\t\t\t// call back when ready\r\n\t\t\treturn this.wait_for_assets(callback)\r\n\t\t}\r\n\t\t// otherwise resolve a Promise\r\n\t\telse\r\n\t\t{\r\n\t\t\t// no callback given, return a Promise\r\n\t\t\treturn new Promise((resolve, reject) => this.wait_for_assets(resolve))\r\n\t\t}\r\n\t}\r\n\r\n\t// Registers Node.js require() hooks for the assets\r\n\t//\r\n\t// This is what makes the `requre()` magic work on server.\r\n\t// These `require()` hooks must be set before you `require()`\r\n\t// any of your assets\r\n\t// (e.g. before you `require()` any React components\r\n\t// `require()`ing your assets).\r\n\t//\r\n\t// read this article if you don't know what a \"require hook\" is\r\n\t// http://bahmutov.calepin.co/hooking-into-node-loader-for-fun-and-profit.html\r\n\tregister()\r\n\t{\r\n\t\tthis.log.debug('registering require() hooks for assets')\r\n\r\n\t\t// // a helper array for extension matching\r\n\t\t// const extensions = []\r\n\t\t//\r\n\t\t// // for each user specified asset type,\r\n\t\t// // for each file extension,\r\n\t\t// // create an entry in the extension matching array\r\n\t\t// for (let asset_type of Object.keys(this.options.assets))\r\n\t\t// {\r\n\t\t// \tconst description = this.options.assets[asset_type]\r\n\t\t//\r\n\t\t// \tfor (let extension of description.extensions)\r\n\t\t// \t{\r\n\t\t// \t\textensions.push([`.${extension}`, description])\r\n\t\t// \t}\r\n\t\t// }\r\n\t\t//\r\n\t\t// // registers a global require() hook which runs\r\n\t\t// // before the default Node.js require() logic\r\n\t\t// this.asset_hook = require_hacker.global_hook('webpack-asset', (path, module) =>\r\n\t\t// {\r\n\t\t// \t// for each asset file extension\r\n\t\t// \tfor (let extension of extensions)\r\n\t\t// \t{\r\n\t\t// \t\t// if the require()d path has this file extension\r\n\t\t// \t\tif (ends_with(path, extension[0]))\r\n\t\t// \t\t{\r\n\t\t// \t\t\t// then require() it using webpack-assets.json\r\n\t\t// \t\t\treturn this.require(require_hacker.resolve(path, module), extension[1])\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// })\r\n\r\n\t\t// for each user specified asset type,\r\n\t\t// register a require() hook for each file extension of this asset type\r\n\t\tfor (let asset_type of Object.keys(this.options.assets))\r\n\t\t{\r\n\t\t\tconst description = this.options.assets[asset_type]\r\n\r\n\t\t\tfor (let extension of description.extensions)\r\n\t\t\t{\r\n\t\t\t\tthis.register_extension(extension, description)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// intercepts loader-powered require() paths\r\n\t\tthis.loaders_hook = require_hacker.global_hook('webpack-loaders', (required_path, module) =>\r\n\t\t{\r\n\t\t\t// filter out non-loader paths\r\n\t\t\t// (ignore filesystem paths (both Linux and Windows)\r\n\t\t\t//  and non-loader paths)\r\n\t\t\tif (starts_with(required_path, '/')\r\n\t\t\t\t|| starts_with(required_path, './')\r\n\t\t\t\t|| starts_with(required_path, '../')\r\n\t\t\t\t|| required_path.indexOf(':') > 0\r\n\t\t\t\t|| required_path.indexOf('!') < 0)\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet parts = required_path.split('!')\r\n\t\t\tconst local_asset_path = parts.pop()\r\n\r\n\t\t\t// extra measures taken here to not\r\n\t\t\t// confuse some legit require()d path\r\n\t\t\t// with a seemingly loader-powered one\r\n\t\t\tif (!starts_with(local_asset_path, './')\r\n\t\t\t\t&& !starts_with(local_asset_path, '../'))\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tparts = parts.map(loader =>\r\n\t\t\t{\r\n\t\t\t\tlet loader_parts = loader.split('?')\r\n\r\n\t\t\t\tif (!ends_with(loader_parts[0], '-loader'))\r\n\t\t\t\t{\r\n\t\t\t\t\tloader_parts[0] += '-loader'\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn `./~/${loader_parts.join('?')}`\r\n\t\t\t})\r\n\r\n\t\t\tconst global_asset_path = require_hacker.resolve(local_asset_path, module)\r\n\r\n\t\t\tconst path = parts.join('!') + '!' + this.normalize_asset_path(global_asset_path)\r\n\r\n\t\t\tconst asset = this.asset_source(path)\r\n\r\n\t\t\tif (asset === undefined)\r\n\t\t\t{\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\treturn this.require_asset(asset, { require_cache_path: required_path + '.webpack-loaders' })\r\n\t\t})\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n\r\n\t// registers a require hook for a particular file extension\r\n\tregister_extension(extension, description)\r\n\t{\r\n\t\tthis.log.debug(` registering a require() hook for *.${extension}`)\r\n\r\n\t\t// place the require() hook for this extension\r\n\t\tif (extension === 'json')\r\n\t\t{\r\n\t\t\tthis.hooks.push(require_hacker.hook(extension, path =>\r\n\t\t\t{\r\n\t\t\t\t// special case for require('webpack-assets.json') and 'json' asset extension\r\n\t\t\t\tif (path === this.webpack_assets_path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.require(path, description)\r\n\t\t\t}))\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.hooks.push(require_hacker.hook(extension, path => this.require(path, description)))\r\n\t\t}\r\n\t}\r\n\r\n\t// injects Webpack's `modulesDirectories` into Node.js module resolver\r\n\tinject_modules_directories(modules_directories)\r\n\t{\r\n\t\tmodules_directories = modules_directories.filter(x => x !== 'node_modules')\r\n\r\n\t\t// instrument Module._nodeModulePaths function\r\n\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L202\r\n\t\t//\r\n\t\tconst original_find_paths = require('module')._findPath\r\n\t\t//\r\n\t\trequire('module')._findPath = function(request, paths)\r\n\t\t{\r\n\t\t\tpaths.map(function(a_path)\r\n\t\t\t{\r\n\t\t\t\tvar parts = a_path.split(path.sep)\r\n\t\t\t\tif (parts[parts.length - 1] === 'node_modules')\r\n\t\t\t\t{\r\n\t\t\t\t\tparts[parts.length - 1] = ''\r\n\t\t\t\t\treturn parts.join(path.sep)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.filter(function(a_path)\r\n\t\t\t{\r\n\t\t\t\treturn a_path\r\n\t\t\t})\r\n\t\t\t.forEach(function(a_path)\r\n\t\t\t{\r\n\t\t\t\tmodules_directories.forEach(function(modules_directory)\r\n\t\t\t\t{\r\n\t\t\t\t\tpaths.push(a_path + modules_directory)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\treturn original_find_paths(request, paths)\r\n\t\t}\r\n\t}\r\n\r\n\t// injects helper functions into `require()` function\r\n\t// (such as `.context()` and `.ensure()`)\r\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/48#issuecomment-182878437\r\n\t// (this is a \"dirty\" way to do it but it works)\r\n\tpatch_require()\r\n\t{\r\n\t\t// a source code of a function that\r\n\t\t// require()s all modules inside the `base` folder\r\n\t\t// and puts them into a hash map for further reference\r\n\t\t//\r\n\t\t// https://webpack.github.io/docs/context.html\r\n\t\t//\r\n\t\tlet require_context = `require.context = function(base, scan_subdirectories, regular_expression)\r\n\t\t{\r\n\t\t\tbase = require('path').join(require('path').dirname(module.filename), base)\r\n\r\n\t\t\tvar contents = {}\r\n\r\n\t\t\t// recursive function\r\n\t\t\tfunction read_directory(directory)\r\n\t\t\t{\r\n\t\t\t\trequire('fs').readdirSync(directory).forEach(function(child)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar full_path = require('path').resolve(directory, child)\r\n\r\n\t\t\t\t\tif (require('fs').statSync(full_path).isDirectory())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (scan_subdirectories)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tread_directory(full_path)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar asset_path = require('path').relative(base, full_path)\r\n\r\n\t\t\t\t\t\t// analogous to \"uniform_path\" from \"./common.js\"\r\n\t\t\t\t\t\tasset_path = (asset_path[0] === '.' ? asset_path : ('./' + asset_path)).replace(/\\\\\\\\/g, '/')\r\n\r\n\t\t\t\t\t\tif (regular_expression && !regular_expression.test(asset_path))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcontents[asset_path] = full_path\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tread_directory(base)\r\n\r\n\t\t\tvar result = function(asset_path)\r\n\t\t\t{\r\n\t\t\t\treturn require(contents[asset_path])\r\n\t\t\t}\r\n\r\n\t\t\tresult.keys = function()\r\n\t\t\t{\r\n\t\t\t\treturn Object.keys(contents)\r\n\t\t\t}\r\n\r\n\t\t\tresult.resolve = function(asset_path)\r\n\t\t\t{\r\n\t\t\t\treturn contents[asset_path]\r\n\t\t\t}\r\n\r\n\t\t\treturn result\r\n\t\t};`\r\n\r\n\t\t// some code minification\r\n\t\trequire_context = UglifyJS.minify(require_context, { fromString: true }).code\r\n\r\n\t\t// Source code for `require.ensure()`\r\n\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/84\r\n\t\tconst require_ensure = `require.ensure=function(d,c){c(require)};`\r\n\r\n\t\tconst debug = this.log.debug.bind(this.log)\r\n\r\n\t\t// instrument Module.prototype._compile function\r\n\t\t// https://github.com/nodejs/node/blob/master/lib/module.js#L376-L380\r\n\t\t//\r\n\t\tconst original_compile = require('module').prototype._compile\r\n\t\t//\r\n\t\trequire('module').prototype._compile = function(content, filename)\r\n\t\t{\r\n\t\t\t// inject it only in .js files\r\n\t\t\tif (!ends_with(filename, '.js'))\r\n\t\t\t{\r\n\t\t\t\t// (the return value is supposed to be `undefined`)\r\n\t\t\t\treturn original_compile.call(this, content, filename)\r\n\t\t\t}\r\n\r\n\t\t\t// will be prepended to the module source code\r\n\t\t\tlet preamble = ''\r\n\r\n\t\t\t// inject it only in .js files which\r\n\t\t\t// might probably have `require.context` reference\r\n\t\t\tif (content.indexOf('require.context') >= 0)\r\n\t\t\t{\r\n\t\t\t\tdebug(`Injecting require.context() into \"${filename}\"`)\r\n\t\t\t\tpreamble += require_context\r\n\t\t\t}\r\n\r\n\t\t\t// inject it only in .js files which\r\n\t\t\t// might probably have `require.ensure` reference\r\n\t\t\tif (content.indexOf('require.ensure') >= 0)\r\n\t\t\t{\r\n\t\t\t\tdebug(`Injecting require.ensure() into \"${filename}\"`)\r\n\t\t\t\tpreamble += require_ensure\r\n\t\t\t}\r\n\r\n\t\t\t// If there is a preamble to prepend\r\n\t\t\tif (preamble)\r\n\t\t\t{\r\n\t\t\t\t// Account for \"use strict\" which is required to be in the beginning of the source code\r\n\t\t\t\tif (starts_with(content, `'use strict'`) || starts_with(content, `\"use strict\"`))\r\n\t\t\t\t{\r\n\t\t\t\t\tpreamble = `\"use strict\";` + preamble\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// the \"dirty\" way\r\n\t\t\tcontent = preamble + content\r\n\r\n\t\t\t// (the return value is supposed to be `undefined`)\r\n\t\t\treturn original_compile.call(this, content, filename)\r\n\t\t}\r\n\t}\r\n\r\n\tnormalize_asset_path(global_asset_path)\r\n\t{\r\n\t\t// sanity check\r\n\t\t/* istanbul ignore if */\r\n\t\tif (!this.options.project_path)\r\n\t\t{\r\n\t\t\tthrow new Error(`You forgot to call the .server() method passing it your project's base path`)\r\n\t\t}\r\n\r\n\t\t// convert global asset path to local-to-the-project asset path\r\n\t\treturn normalize_asset_path(global_asset_path, this.options.project_path)\r\n\t}\r\n\r\n\t// require()s an asset by a global path\r\n\trequire(global_asset_path, description)\r\n\t{\r\n\t\tthis.log.debug(`require() called for ${global_asset_path}`)\r\n\r\n\t\t// convert global asset path to local-to-the-project asset path\r\n\t\tconst asset_path = this.normalize_asset_path(global_asset_path)\r\n\r\n\t\t// if this filename is in the user specified exceptions list\r\n\t\t// (or is not in the user explicitly specified inclusion list)\r\n\t\t// then fall back to the normal require() behaviour\r\n\t\tif (!this.includes(asset_path, description) || this.excludes(asset_path, description))\r\n\t\t{\r\n\t\t\tthis.log.debug(` skipping require call for ${asset_path}`)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// find this asset in the list\r\n\t\tconst asset = this.asset_source(asset_path)\r\n\r\n\t\t// if the asset was not found in the list, output an error\r\n\t\tif (asset === undefined)\r\n\t\t{\r\n\t\t\tthis.log.error(`asset not found: ${asset_path}`)\r\n\t\t}\r\n\r\n\t\treturn this.require_asset(asset, { require_cache_path: global_asset_path })\r\n\t}\r\n\r\n\t// require()s an asset by it source\r\n\trequire_asset(asset, options)\r\n\t{\r\n\t\t// this.log.debug(`require() called for ${asset_path}`)\r\n\r\n\t\t// track cached assets (only in development mode)\r\n\t\tif (this.options.development)\r\n\t\t{\r\n\t\t\t// mark this asset as cached\r\n\t\t\tthis.cached_assets.push(options.require_cache_path)\r\n\t\t}\r\n\r\n\t\t// return CommonJS module source for this asset\r\n\t\treturn require_hacker.to_javascript_module_source(asset)\r\n\t}\r\n\r\n\t// returns asset source by path (looks it up in webpack-assets.json)\r\n\tasset_source(asset_path)\r\n\t{\r\n\t\tthis.log.debug(` requiring ${asset_path}`)\r\n\r\n\t\t// Webpack replaces `node_modules` with `~`.\r\n\t\t// I don't know how exactly it decides whether to\r\n\t\t// replace `node_modules` with `~` or not\r\n\t\t// so it will be a guess.\r\n\t\tfunction possible_webpack_paths(asset_path)\r\n\t\t{\r\n\t\t\t// Webpack always replaces project's own `node_modules` with `~`\r\n\t\t\tif (starts_with(asset_path, './node_modules/'))\r\n\t\t\t{\r\n\t\t\t\tasset_path = asset_path.replace('./node_modules/', './~/')\r\n\t\t\t}\r\n\r\n\t\t\t// if there are any `node_modules` left,\r\n\t\t\t// supposing the count is N,\r\n\t\t\t// then there are 2 to the power of N possible guesses\r\n\t\t\t// on how webpack path might look like.\r\n\t\t\tconst parts = asset_path.split('/node_modules/')\r\n\r\n\t\t\tfunction construct_guesses(parts)\r\n\t\t\t{\r\n\t\t\t\tif (parts.length === 1)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn [parts]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst last = parts.pop()\r\n\t\t\t\tconst rest = construct_guesses(parts)\r\n\r\n\t\t\t\tconst guesses = []\r\n\r\n\t\t\t\tfor (let guess of rest)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst one = clone(guess)\r\n\t\t\t\t\tone.push('/~/')\r\n\t\t\t\t\tone.push(last)\r\n\r\n\t\t\t\t\tconst two = clone(guess)\r\n\t\t\t\t\ttwo.push('/node_modules/')\r\n\t\t\t\t\ttwo.push(last)\r\n\r\n\t\t\t\t\tguesses.push(one)\r\n\t\t\t\t\tguesses.push(two)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn guesses\r\n\t\t\t}\r\n\r\n\t\t\treturn construct_guesses(parts)\r\n\t\t}\r\n\r\n\t\t// get real file path list\r\n\t\tconst assets = this.assets().assets\r\n\r\n\t\tconst possible_webpack_asset_paths = possible_webpack_paths(asset_path).map(path => path.join(''))\r\n\r\n\t\tfor (let webpack_asset_path of possible_webpack_asset_paths)\r\n\t\t{\r\n\t\t\tif (possible_webpack_asset_paths.length > 1)\r\n\t\t\t{\r\n\t\t\t\tthis.log.debug(`  trying \"${webpack_asset_path}\"`)\r\n\t\t\t}\r\n\r\n\t\t\t// find this asset in the real file path list\r\n\t\t\tconst asset = assets[webpack_asset_path]\r\n\r\n\t\t\tif (exists(asset))\r\n\t\t\t{\r\n\t\t\t\t// the asset was found in the list - return it\r\n\t\t\t\treturn asset\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if the asset was not found in the list, return nothing\r\n\t\treturn\r\n\t}\r\n\r\n\t// unregisters require() hooks\r\n\tundo()\r\n\t{\r\n\t\t// for each user specified asset type,\r\n\t\t// unregister a require() hook for each file extension of this asset type\r\n\t\tfor (let hook of this.hooks)\r\n\t\t{\r\n\t\t\thook.unmount()\r\n\t\t}\r\n\r\n\t\t// this.asset_hook.unmount()\r\n\r\n\t\t// unmount the aliasing hook (if mounted)\r\n\t\tif (this.alias_hook)\r\n\t\t{\r\n\t\t\tthis.alias_hook.unmount()\r\n\t\t}\r\n\r\n\t\t// unmount require() hook which intercepts loader-powered require() paths\r\n\t\tif (this.loaders_hook)\r\n\t\t{\r\n\t\t\tthis.loaders_hook.unmount()\r\n\t\t}\r\n\t}\r\n\r\n\t// Checks if the required path should be excluded from the custom require() hook\r\n\texcludes(path, options)\r\n\t{\r\n\t\t// if \"exclude\" parameter isn't specified, then exclude nothing\r\n\t\tif (!exists(options.exclude))\r\n\t\t{\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\t// for each exclusion case\r\n\t\tfor (let exclude of options.exclude)\r\n\t\t{\r\n\t\t\t// supports regular expressions\r\n\t\t\tif (exclude instanceof RegExp)\r\n\t\t\t{\r\n\t\t\t\tif (exclude.test(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// check for a compex logic match\r\n\t\t\telse if (typeof exclude === 'function')\r\n\t\t\t{\r\n\t\t\t\tif (exclude(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// otherwise check for a simple textual match\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (exclude === path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no matches found.\r\n\t\t// returns false so that it isn't undefined (for testing purpose)\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Checks if the required path should be included in the custom require() hook\r\n\tincludes(path, options)\r\n\t{\r\n\t\t// if \"include\" parameter isn't specified, then include everything\r\n\t\tif (!exists(options.include))\r\n\t\t{\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\t// for each inclusion case\r\n\t\tfor (let include of options.include)\r\n\t\t{\r\n\t\t\t// supports regular expressions\r\n\t\t\tif (include instanceof RegExp)\r\n\t\t\t{\r\n\t\t\t\tif (include.test(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// check for a compex logic match\r\n\t\t\telse if (typeof include === 'function')\r\n\t\t\t{\r\n\t\t\t\tif (include(path))\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// otherwise check for a simple textual match\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (include === path)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// no matches found.\r\n\t\t// returns false so that it isn't undefined (for testing purpose)\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Waits for webpack-assets.json to be created after Webpack build process finishes\r\n\t//\r\n\t// The callback is called when `webpack-assets.json` has been found\r\n\t// (it's needed for development because `webpack-dev-server`\r\n\t//  and your application server are usually run in parallel).\r\n\t//\r\n\twait_for_assets(done)\r\n\t{\r\n\t\t// condition check interval\r\n\t\tconst check_interval = 300 // in milliseconds\r\n\t\tconst message_interval = 2000 // in milliseconds\r\n\r\n\t\t// show the message not too often\r\n\t\tlet message_timer = 0\r\n\r\n\t\t// selfie\r\n\t\tconst tools = this\r\n\r\n\t\t// waits for condition to be met, then proceeds\r\n\t\tfunction wait_for(condition, proceed)\r\n\t\t{\r\n\t\t\tfunction check()\r\n\t\t\t{\r\n\t\t\t\t// if the condition is met, then proceed\r\n\t\t\t\tif (condition())\r\n\t\t\t\t{\r\n\t\t\t\t\treturn proceed()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmessage_timer += check_interval\r\n\r\n\t\t\t\tif (message_timer >= message_interval)\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage_timer = 0\r\n\r\n\t\t\t\t\ttools.log.debug(`(${tools.webpack_assets_path} not found)`)\r\n\t\t\t\t\ttools.log.info('(waiting for the first Webpack build to finish)')\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetTimeout(check, check_interval)\r\n\t\t\t}\r\n\r\n\t\t\tcheck()\r\n\t\t}\r\n\r\n\t\t// wait for webpack-assets.json to be written to disk by Webpack\r\n\t\t// (setTimeout() for global.webpack_isomorphic_tools )\r\n\r\n\t\tlet ready_check\r\n\r\n\t\t// either go over network\r\n\t\tif (this.options.development && this.options.port)\r\n\t\t{\r\n\t\t\tready_check = () =>\r\n\t\t\t{\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\trequest(this.options.port)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t\tcatch (error)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!starts_with(error.message, 'Server responded with status code 404:\\nWebpack assets not generated yet')\r\n\t\t\t\t\t\t&& !starts_with(error.message, 'connect ECONNREFUSED')\r\n\t\t\t\t\t\t&& !starts_with(error.message, 'Request timed out after'))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.log.error(`Couldn't contact webpack-isomorphic-tools plugin over HTTP. Using an empty stub for webpack assets map.`)\r\n\t\t\t\t\t\tthis.log.error(error)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// or read it from disk\r\n\t\telse\r\n\t\t{\r\n\t\t\tready_check = () => fs.existsSync(this.webpack_assets_path)\r\n\t\t}\r\n\r\n\t\tsetImmediate(() => wait_for(ready_check, done))\r\n\r\n\t\t// allows method chaining\r\n\t\treturn this\r\n\t}\r\n}\r\n\r\n// Doesn't work with Babel 6 compiler\r\n// // alias camel case for those who prefer it\r\n// alias_properties_with_camel_case(webpack_isomorphic_tools.prototype)"]}