{"version":3,"sources":["../../source/plugin/plugin.js"],"names":[],"mappings":"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","file":"plugin.js","sourcesContent":["import path from 'path'\n\nimport write_assets  from './write assets'\nimport notify_stats  from './notify stats'\n\nimport Log from './../tools/log'\n\nimport { exists, clone, convert_from_camel_case, alias_properties_with_camel_case } from './../helpers'\n\nimport { default_webpack_assets, normalize_options, verbosity_levels } from './../common'\n\n// a Webpack plugin\nexport default function Webpack_isomorphic_tools_plugin(options)\n{\n\t// take the passed in options\n\tthis.options = convert_from_camel_case(clone(options))\n\n\t// add missing fields, etc\n\tnormalize_options(this.options)\n\n\t// logging\n\tthis.log = new Log('webpack-isomorphic-tools/plugin', { debug: this.options.debug })\n\n\t// assets regular expressions (based on extensions).\n\t// will be used in loaders and in write_assets\n\tthis.regular_expressions = {}\n\n\t// for each user defined asset type\n\tfor (let asset_type of Object.keys(this.options.assets))\n\t{\n\t\tconst description = this.options.assets[asset_type]\n\n\t\t// create a regular expression for this file extension (or these file extensions)\n\t\tthis.regular_expressions[asset_type] = description.regular_expression || Webpack_isomorphic_tools_plugin.regular_expression(description.extensions)\n\t}\n}\n\n// starts HTTP service in development mode\n// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/92\nWebpack_isomorphic_tools_plugin.prototype.start_dev_server = function()\n{\n\tconst express = require('express')\n\tconst app = express()\n\n\tapp.get('/', (request, response) =>\n\t{\n\t\tif (!this.assets)\n\t\t{\n\t\t\treturn response.status(404).send('Webpack assets not generated yet')\n\t\t}\n\n\t\tresponse.send(this.assets)\n\t})\n\n\tapp.listen(this.options.port, () =>\n\t{\n\t\tthis.log.info(`HTTP service listening on port ${this.options.port}`)\n\t})\n}\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.prototype.regular_expression = function(asset_type)\n{\n\tif (!exists(this.regular_expressions[asset_type]))\n\t{\n\t\tthrow new Error(`There's no asset type \"${asset_type}\" defined in webpack-isomorphic-tools configuration. Perhaps you didn't spell it correctly.`)\n\t}\n\n\treturn this.regular_expressions[asset_type]\n}\n\n// shorthand alias\nWebpack_isomorphic_tools_plugin.prototype.regexp = Webpack_isomorphic_tools_plugin.prototype.regular_expression\n\n// creates a regular expression for this file extension (or these file extensions)\nWebpack_isomorphic_tools_plugin.regular_expression = function(extensions)\n{\n\tif (!Array.isArray(extensions))\n\t{\n\t\tthrow new Error(`You were expected to pass a list of extensions (an array). Instead got: ${extensions}. Maybe you were looking for the instance method istead of the class method of this plugin?`)\n\t}\n\n\tlet matcher\n\tif (extensions.length > 1)\n\t{\n\t\tmatcher = `(${extensions.join('|')})`\n\t}\n\telse\n\t{\n\t\tmatcher = extensions\n\t}\n\n\treturn new RegExp(`\\\\.${matcher}$`)\n}\n\n// sets development mode flag to whatever was passed (or true if nothing was passed)\n// (development mode allows asset hot reloading when used with webpack-dev-server)\nWebpack_isomorphic_tools_plugin.prototype.development = function(flag)\n{\n\t// set development mode flag\n\tthis.options.development = exists(flag) ? flag : true\n\n\tif (this.options.development)\n\t{\n\t\tthis.log.debug('entering development mode')\n\t}\n\telse\n\t{\n\t\tthis.log.debug('entering production mode')\n\t}\n\n\t// allows method chaining\n\treturn this\n}\n\n// applies the plugin to the Webpack build\nWebpack_isomorphic_tools_plugin.prototype.apply = function(compiler)\n{\n\t// start HTTP service in development mode\n\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/issues/92\n\t//\n\t// (`.apply()` is only called once, so can start the dev server here)\n\t//\n\tif (this.options.development && this.options.port)\n\t{\n\t\tthis.start_dev_server()\n\t}\n\n\t// Webpack configuration\n\tconst webpack_configuration = compiler.options\n\n\t// validate webpack configuration\n\tif (!webpack_configuration.context)\n\t{\n\t\tthrow new Error('You must specify \".context\" in your webpack configuration')\n\t}\n\n\t// project base path, required to output webpack-assets.json\n\tthis.options.project_path = webpack_configuration.context\n\n\t// resolve webpack-assets.json file path\n\tconst webpack_assets_path = path.resolve(this.options.project_path, this.options.webpack_assets_file_path)\n\n\t// resolve webpack-stats.json file path\n\tconst webpack_stats_path = path.resolve(this.options.project_path, this.options.webpack_stats_file_path)\n\n\t// selfie\n\tconst plugin = this\n\n\t// when all is done\n\t// https://github.com/webpack/docs/wiki/plugins\n\tcompiler.plugin('done', function(stats)\n\t{\n\t\tplugin.log.debug('------------------- Started -------------------')\n\n\t\tconst json = stats.toJson\n\t\t({\n\t\t\tcontext: webpack_configuration.context\n\t\t})\n\n\t\t// output some info to the console if in development mode\n\t\tif (plugin.options.development && plugin.options.verbosity !== verbosity_levels.no_webpack_stats)\n\t\t{\n\t\t\t// outputs stats info to the console\n\t\t\t// (only needed in development mode)\n\t\t\tnotify_stats(stats, json, plugin.options.verbosity === verbosity_levels.webpack_stats_for_each_build)\n\t\t}\n\n\t\t// assets base path (on disk or on the network)\n\t\t//\n\t\t// (first search for the `devServer.publicPath` setting,\n\t\t//  then fallback to the generic `publicPath`)\n\t\t//\n\t\t// (using `publicPath` from webpack stats here\n\t\t//  as opposed to `webpack_configuration.output.publicPath`\n\t\t//  because it is processed by webpack replacing things like `[hash]`)\n\t\t//\n\t\tconst assets_base_url = (webpack_configuration.devServer && webpack_configuration.devServer.publicPath) ? webpack_configuration.devServer.publicPath : json.publicPath\n\n\t\t// serve webpack assets from RAM rather than from disk\n\t\tconst serve_assets_from_memory = plugin.options.development && plugin.options.port\n\n\t\t// write webpack-assets.json with assets info\n\t\t// and cache them in plugin instance\n\t\t// for later serving from HTTP service\n\t\tplugin.assets = write_assets(json,\n\t\t{\n\t\t\tdevelopment         : plugin.options.development,\n\t\t\tdebug               : plugin.options.debug,\n\t\t\tassets              : plugin.options.assets,\n\t\t\talias               : plugin.options.alias,\n\t\t\tproject_path        : plugin.options.project_path,\n\t\t\tassets_base_url,\n\t\t\twebpack_assets_path : webpack_assets_path,\n\t\t\twebpack_stats_path  : webpack_stats_path,\n\t\t\toutput              : default_webpack_assets(),\n\t\t\toutput_to_a_file    : !serve_assets_from_memory,\n\t\t\tregular_expressions : plugin.regular_expressions\n\t\t},\n\t\tplugin.log)\n\n\t\tplugin.log.debug('------------------- Finished -------------------')\n\t})\n}\n\n// a sample module source parser for webpack url-loader\n// (works for images, fonts, and i guess for everything else, should work for any file type)\nWebpack_isomorphic_tools_plugin.url_loader_parser = function(module, options, log)\n{\n\treturn module.source\n}\n\n// a sample module source parser for webpack css-loader\n// (without css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_loader_parser = function(module, options, log)\n{\n\treturn module.source + '\\n module.exports = module.exports.toString();'\n}\n\n// a sample module source parser for webpack css-loader\n// (with css-loader \"modules\" feature support)\nWebpack_isomorphic_tools_plugin.css_modules_loader_parser = function(module, options, log)\n{\n\treturn module.source + '\\n module.exports = exports.locals || {}; module.exports._style = exports.toString();'\n}\n\n// a filter for getting a css module when using it with style-loader\n//\n// in development mode there's webpack \"style-loader\",\n// so the module with module.name equal to the asset path is not what's needed\n// (because what that module does is it creates a <style/> tag on the page).\n// the module with the CSS styles is the one with a long name:\nWebpack_isomorphic_tools_plugin.style_loader_filter = function(module, regular_expression, options, log)\n{\n\tconst css_loader = module.name.split('!')[0]\n\treturn regular_expression.test(module.name) &&\n\t\t// The paths below have the form of \"/~/css-loader\"\n\t\t// and not the form of \"./~/css-loader\"\n\t\t// because in some (non-standard) cases\n\t\t// Webpack project context can be set\n\t\t// not to project root folder.\n\t\t//\n\t\t// For a discussion see:\n\t\t// https://github.com/halt-hammerzeit/webpack-isomorphic-tools/pull/68\n\t\t// (there the `context` is set to the \"${project_root}/src\" folder\n\t\t//  so that the asset paths in `webpack-assets.json` wouldn't\n\t\t//  contain the \"./src\" prefix and therefore they will be found\n\t\t//  when require()d from code in \"./target\"\n\t\t//  which is compiled with Babel from the \"./src\" folder)\n\t\t//\n\t\t// I personally don't compile sources on the server side,\n\t\t// so I haven't thought of better ways of doing all that.\n\t\t//\n\t\t(css_loader.indexOf('/~/css-loader') > 0 ||\n\t\t css_loader.indexOf('/~/.npminstall/css-loader') > 0 ||\n\t\t css_loader.indexOf('/~/.store/css-loader') > 0)\n}\n\n// extracts css style file path\nWebpack_isomorphic_tools_plugin.style_loader_path_extractor = function(module, options, log)\n{\n\treturn module.name.slice(module.name.lastIndexOf('!') + 1)\n}\n\n// Doesn't work with Babel 6 compiler\n// // alias camel case for those who prefer it\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin.prototype)\n// alias_properties_with_camel_case(Webpack_isomorphic_tools_plugin)\n\n// camelCase aliases\n\nWebpack_isomorphic_tools_plugin.prototype.regularExpression = Webpack_isomorphic_tools_plugin.prototype.regular_expression\n\nWebpack_isomorphic_tools_plugin.urlLoaderParser          = Webpack_isomorphic_tools_plugin.url_loader_parser\nWebpack_isomorphic_tools_plugin.cssLoaderParser          = Webpack_isomorphic_tools_plugin.css_loader_parser\nWebpack_isomorphic_tools_plugin.cssModulesLoaderParser   = Webpack_isomorphic_tools_plugin.css_modules_loader_parser\nWebpack_isomorphic_tools_plugin.styleLoaderFilter        = Webpack_isomorphic_tools_plugin.style_loader_filter\nWebpack_isomorphic_tools_plugin.styleLoaderPathExtractor = Webpack_isomorphic_tools_plugin.style_loader_path_extractor\n"]}